pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }

 stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

  stage("CheckStyle reports"){
            steps{
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn checkstyle:checkstyle'
            }
        }

  stage ("SonarQube analysis"){
            steps {
                echo 'Starting SonarQube analysis...'
                withSonarQubeEnv('SonarServer') {
                    sh """cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar \
                          -Dsonar.projectKey=myJavaApp
                          """
                }
            }
        }

 stage('Build and Push Docker Image') {
    environment {
        DOCKER_IMAGE = "varmaaradhula/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-hub-creds')  // Jenkins credentials ID for Docker Hub
    }
    steps {
        script {
            // Navigate to project directory and build the image
            sh """
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                docker build -t ${DOCKER_IMAGE} .
            """
            
            // Log in to Docker Hub and push the image
            docker.withRegistry('https://index.docker.io/v1/', "docker-hub-creds") {
                sh "docker push ${DOCKER_IMAGE}"
            }
        }
    }
}
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "varmaaradhula"
        }
        steps {
            withCredentials([sshUserPrivateKey(credentialsId: 'gitsshKey', keyFileVariable: 'SSH_KEY')]) {
                sh '''
                    git config user.email "rkvarmaa@gmail.com"
                    git config user.name "Varma Aradhula"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${SSH_KEY}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
